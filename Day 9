#Exercise 1
a = lambda x, y : x * y
print(a(5, 6))
#Exercise 2
from functools import reduce
 
fib_series = lambda n: reduce(lambda x, _: x+[x[-1]+x[-2]],
                                range(n-2), [0, 1])
 
print("Fibonacci series upto 2:")
print(fib_series(2))
print("\nFibonacci series upto 5:")
print(fib_series(5))
print("\nFibonacci series upto 6:")
print(fib_series(6))
print("\nFibonacci series upto 9:")
print(fib_series(9))
#Exercise 3
nums = [2, 4, 6, 9 , 11]
n = 2
print("Original list: ", nums)
print("Given number: ", n)
filtered_numbers=list(map(lambda number:number*n,nums))
print("Result:")
print(' '.join(map(str,filtered_numbers)))
#Exercise 4
def findNoIsDivisibleOrNot(n, l =[]): 
for i in range(0, len(l)): 

        if l[i]% n != 0: 

            return 0

    return 1

 l = [14, 12, 4, 18] 

n = 2

if findNoIsDivisibleOrNot(n, l) == 1: 

    print "Yes"

else: 

    print "No"
#Exercise 5
list1 = [21,3,4,6,33,2,3,1,3,76]
even_count= 0
# enhanced for loop
for num in list1:
   #even numbers
   if num % 2 == 0:
      even_count += 1
print("Even numbers available in the list: ", even_count)
